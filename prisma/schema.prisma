// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  Id            String         @id @default(uuid())
  full_name     String
  username      String         @unique
  email         String         @unique
  password      String
  role          Role           @relation(fields: [role_id], references: [Id])
  role_id       Int
  profile       User_Profile?
  Kedai_Profile Kedai_Profile?
  Ulasan        Ulasan[]
  premium       Boolean        @default(false)
  premium_at    DateTime       @default(now())
}

model User_Profile {
  Id         String    @id @unique
  user       User      @relation(fields: [Id], references: [Id])
  birth_date DateTime?
  bio        String?
  address    String?
  phone      String?   @db.VarChar(15)
}

model Kedai_Profile {
  Id          String      @id @unique
  user        User        @relation(fields: [Id], references: [Id])
  name        String      @unique
  picture     String?
  description String
  address     String
  phone       String      @db.VarChar(15)
  produk      Produk[]
  Transaksi   Transaksi[]
}

model Produk {
  Id              Int               @default(autoincrement())
  kedai           Kedai_Profile     @relation(fields: [kedaiId], references: [Id])
  kedaiId         String
  name            String
  price           Int
  description     String
  picture         String?
  updatedAt       DateTime          @default(now())
  bahan           Bahan[]
  TransaksiDetail TransaksiDetail[]
  Ulasan          Ulasan[]

  @@id([Id, kedaiId])
}

model Bahan {
  Id            Int    @id @default(autoincrement())
  produk        Produk @relation(fields: [produkId, produkKedaiId], references: [Id, kedaiId])
  produkId      Int
  produkKedaiId String
  nama          String
  qty           Float
  satuan        Satuan @relation(fields: [satuanId], references: [Id])
  satuanId      Int
  harga         Int
  per           Float
}

model Satuan {
  Id    Int     @id @default(autoincrement())
  nama  String
  bahan Bahan[]
}

model Role {
  Id        Int    @id @default(autoincrement())
  role_name String @unique
  user      User[]
}

model Transaksi {
  Id              Int               @id @default(autoincrement())
  kedai           Kedai_Profile     @relation(fields: [kedai_ProfileId], references: [Id])
  kedai_ProfileId String
  at              DateTime          @default(now()) @db.Date
  TransaksiDetail TransaksiDetail[]
}

model TransaksiDetail {
  Id            Int       @id @default(autoincrement())
  transaksi     Transaksi @relation(fields: [transaksiId], references: [Id])
  transaksiId   Int
  produk        Produk    @relation(fields: [produkId, produkKedaiId], references: [Id, kedaiId])
  produkId      Int
  produkKedaiId String
  qty           Int
}

model Ulasan {
  rating        Int
  comment       String
  user          User   @relation(fields: [userId], references: [Id])
  userId        String
  produk        Produk @relation(fields: [produkId, produkKedaiId], references: [Id, kedaiId])
  produkId      Int
  produkKedaiId String

  @@id([userId, produkId, produkKedaiId])
}
